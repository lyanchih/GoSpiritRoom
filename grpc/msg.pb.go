// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	msg.proto

It has these top-level messages:
	Ping
	Pong
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ping struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ping) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Pong struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pong) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Ping)(nil), "Ping")
	proto.RegisterType((*Pong)(nil), "Pong")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Foobar service

type FoobarClient interface {
	// Sends a greeting
	SayPing(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
}

type foobarClient struct {
	cc *grpc.ClientConn
}

func NewFoobarClient(cc *grpc.ClientConn) FoobarClient {
	return &foobarClient{cc}
}

func (c *foobarClient) SayPing(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := grpc.Invoke(ctx, "/Foobar/SayPing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Foobar service

type FoobarServer interface {
	// Sends a greeting
	SayPing(context.Context, *Ping) (*Pong, error)
}

func RegisterFoobarServer(s *grpc.Server, srv FoobarServer) {
	s.RegisterService(&_Foobar_serviceDesc, srv)
}

func _Foobar_SayPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoobarServer).SayPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Foobar/SayPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoobarServer).SayPing(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

var _Foobar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Foobar",
	HandlerType: (*FoobarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayPing",
			Handler:    _Foobar_SayPing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg.proto",
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2d, 0x4e, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe2, 0x62, 0x09, 0xc8, 0xcc, 0x4b, 0x17, 0x12, 0xe2,
	0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x14,
	0xb8, 0x58, 0x02, 0xf2, 0xf3, 0xd2, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3,
	0x61, 0xd2, 0x30, 0xae, 0x91, 0x32, 0x17, 0x9b, 0x5b, 0x7e, 0x7e, 0x52, 0x62, 0x91, 0x90, 0x24,
	0x17, 0x7b, 0x70, 0x62, 0x25, 0xd8, 0x28, 0x56, 0x3d, 0x10, 0x25, 0xc5, 0xaa, 0x07, 0xd2, 0xac,
	0xc4, 0x90, 0xc4, 0x06, 0xb6, 0xc9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x57, 0x4b, 0x48,
	0x76, 0x00, 0x00, 0x00,
}
